{"version":3,"sources":["redux/words/constants.js","redux/words/word.js","redux/dictionaries/constants.js","redux/constants.js","redux/words/index.js","redux/dictionaries/dictionary.js","redux/dictionaries/index.js","redux/definations/defination.js","redux/definations/index.js","redux/reducer.js","serviceWorker.js","pages/words/index.js","api/cambridge.js","redux/dictionaries/actions.js","redux/actions.js","redux/hooks.js","redux/words/actions.js","pages/words/word.js","pages/dictionaries/dictionary.js","pages/dictionaries/index.js","App.js","db/index.js","api/schema.js","index.js"],"names":["INCRESDE_WORD_SEARCH_COUNT","REQUEST_FETCHING_WORD","SUCCESS_FETCHING_WORD","REJECT_FETCHING_WORD","combineReducers","id","state","arguments","length","undefined","action","type","$","payload","name","explanations","searchCounter","isFetching","ADD_DICTIONARY","DEL_DICTIONARY","MAP_DEFINATION_TO_DICTIONARY","UNMAP_DEFINATION_TO_DICTIONARY","ADD_ENTITIES","RESTORE_FROM_INDEXEDDB","words","includes","Object","objectSpread","defineProperty","word","mapValues","w","definations","concat","toConsumableArray","definationId","filter","defaultDictionary","dictionary","dictionaries","newDictionary","dictionaryId","objectWithoutProperties","map","_toPropertyKey","d","level","domain","text","translate","examples","defination","result","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","onUpdate","onSuccess","catch","error","Words","_ref","children","react_default","a","createElement","apiDomain","fetchAutoCompleteJson","_x","_fetchAutoCompleteJson","apply","this","_callee","response","regenerator_default","wrap","_context","prev","next","fetch","sent","abrupt","json","stop","fetchWord","_x2","_fetchWord","_callee2","_context2","toggleMappingDefinationToDictionary","dispatch","getState","_ref4","db","set","delete","unmapDefinationToDictionary","_ref3","mapDefinationToDictionary","addEntities","entities","useWord","wordId","useMappedState","useCallback","useDispatch","useEffect","_ref2","asyncToGenerator","mark","schema","data","normalize","t0","_x3","Title","Typography","Paragraph","TabPane","Tabs","Word","style","margin","spin","spinning","tabs","explaination","tab","avatar","background","marginRight","pos","key","marginBottom","icon","IpaAction","assign","region","ipaUS","ipaUK","list","itemLayout","dataSource","senses","renderItem","renderSense","renderExplaination","skeleton","sense","Item","guideWord","bordered","Defination","useDefination","_useState","useState","_useState2","slicedToArray","dropdownVisibility","setDropdownVisibility","reduxToggleMappingDefinationToDictionary","menu","es_menu","onMouseLeave","es_checkbox","checked","onChange","flexDirection","Meta","title","badge","count","description","dropdown","overlay","visible","onMouseEnter","cursor","color","renderExample","example","html","audioUrl","_useState3","_useState4","isPlaying","setPlaying","audio","useMemo","Audio","addEventListener","handleTextClick","play","onClick","dangerouslySetInnerHTML","__html","Dictionary","defId","grid","gutter","column","renderDefination","card","router_es","to","Dictionaries","DictionaryIndex","path","newDictionaryName","setNewDictionaryName","addDictionary","rawDictionary","input","value","e","target","onPressEnter","placeholder","suffix","DictionaryCard","delDictionary","_","navigate","Header","Layout","Content","Sider","Main","useDictionaries","_useSuggestion","suggestions","setSuggestion","handleSuggestion","results","s","searchtext","useSuggestion","_useSuggestion2","handleSearch","layout","className","collapsible","collapsedWidth","theme","mode","defaultOpenKeys","SubMenu","auto_complete","onSelect","onSearch","Search","storeNames","dbPromise","openDB","upgrade","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_iterator","Symbol","iterator","done","createObjectStore","err","return","stores","get","_get","t1","getAll","_getAll","_set","_callee3","val","_context3","t2","put","_delete2","_callee4","_context4","_x4","clear","_clear","_callee5","_context5","keys","_keys","_callee6","_context6","getAllKeys","mapKeys","i","createStores","Entity","define","devtool","compose","store","createStore","reducer","applyMiddleware","thunk","withExtraArgument","dictionaryPromises","definationPromises","dictionaryIds","promises","Promise","all","definationIds","render","index_es","Provider","document","getElementById","URL","process","href","origin","contentType","headers","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.4b74c724.chunk.js","sourcesContent":["export const INCRESDE_WORD_SEARCH_COUNT = 'INCRESDE_WORD_SEARCH_COUNT';\nexport const REQUEST_FETCHING_WORD = 'REQUEST_FETCHING_WORD';\nexport const SUCCESS_FETCHING_WORD = 'SUCCESS_FETCHING_WORD'\nexport const REJECT_FETCHING_WORD = 'REJECT_FETCHING_WORD';\n","import { combineReducers } from 'redux';\nimport * as $ from './constants';\n\nconst id = (state = '', action) => {\n  switch (action.type) {\n    case $.REQUEST_FETCHING_WORD:\n      return action.payload.id;\n    default:\n      return state;\n  }\n}\n\nconst name = (state = '') => {\n  return state;\n}\n\nconst explanations = (state = []) => {\n  return state;\n}\n\nconst searchCounter = (state = 0, action) => {\n  switch (action.type) {\n    case $.INCRESDE_WORD_SEARCH_COUNT:\n      return state + 1;\n    default:\n      return state;\n  }\n}\n\nconst isFetching = (state = false, action) => {\n  switch (action.type) {\n    case $.REQUEST_FETCHING_WORD:\n      return true;\n    case $.SUCCESS_FETCHING_WORD:\n    case $.REJECT_FETCHING_WORD:\n      return false;\n    default:\n      return state;\n  }\n}\n\nexport default combineReducers({\n  id,\n  name,\n  explanations,\n  searchCounter,\n  isFetching,\n});\n","export const ADD_DICTIONARY = 'ADD_DICTIONARY';\nexport const DEL_DICTIONARY = 'DEL_DICTIONARY';\nexport const TOGGLE_DEFINATION_IN_DICTIONARY = 'TOGGLE_DEFINATION_IN_DICTIONARY';\nexport const MAP_DEFINATION_TO_DICTIONARY = 'MAP_DEFINATION_TO_DICTIONARY';\nexport const UNMAP_DEFINATION_TO_DICTIONARY = 'UNMAP_DEFINATION_TO_DICTIONARY';\n","export * from './dictionaries/constants';\nexport * from './words/constants';\n\nexport const ADD_ENTITIES = 'ADD_ENTITIES';\nexport const RESTORE_FROM_INDEXEDDB = 'RESTORE_FROM_INDEXEDDB';\n","import { mapValues } from 'lodash';\nimport word from './word';\nimport { ADD_ENTITIES, RESTORE_FROM_INDEXEDDB } from '../constants';\n\nconst words = (state = {}, action) => {\n  if (action.type.includes('WORD')) {\n    return {\n      ...state,\n      [action.payload.id]: word(\n        state[action.payload.id],\n        action\n      ),\n    };\n  }\n\n  switch (action.type) {\n    case ADD_ENTITIES:\n    case RESTORE_FROM_INDEXEDDB:\n      return {\n        ...state,\n        ...mapValues(action.payload.words, w => word({\n          ...state[w.id],\n            ...w,\n          },\n          action,\n        )),\n      }\n    default:\n      return state;\n  }\n}\n\nexport default words;\n","import { combineReducers } from 'redux';\nimport * as $ from './constants';\n\nconst id = (state = 'default', action) => {\n  switch (action.type) {\n    case $.ADD_DICTIONARY:\n      return action.payload.id;\n    default:\n      return state;\n  }\n}\n\nconst name = (state = 'default', action) => {\n  switch (action.type) {\n    case $.ADD_DICTIONARY:\n      return action.payload.name;\n    default:\n      return state;\n  }\n}\n\nconst definations = (state = [], action) => {\n  switch (action.type) {\n    case $.MAP_DEFINATION_TO_DICTIONARY:\n\n      return [\n        ...state,\n        action.payload.definationId,\n      ];\n\n    case $.UNMAP_DEFINATION_TO_DICTIONARY:\n      return state.filter(\n        definationId => definationId !== action.payload.definationId\n      );\n\n    default:\n      return state;\n  }\n}\n\nexport default combineReducers({\n  id,\n  name,\n  definations,\n});\n","import { mapValues } from 'lodash';\nimport dictionary from './dictionary';\nimport * as $ from '../constants';\n\nconst defaultDictionary = dictionary(undefined, { type: '@@INIT' });\n\nconst dictionaries = (\n  state = {\n    [defaultDictionary.id]: defaultDictionary,\n  },\n  action\n) => {\n  switch (action.type) {\n    case $.ADD_DICTIONARY:\n      const newDictionary = dictionary(undefined, action);\n\n      return {\n        ...state,\n        [newDictionary.id]: newDictionary,\n      };\n    case $.DEL_DICTIONARY:\n      const { dictionaryId } = action.payload;\n      const { [dictionaryId]: _, ...restState } = state;\n      return restState;\n    case $.MAP_DEFINATION_TO_DICTIONARY:\n    case $.UNMAP_DEFINATION_TO_DICTIONARY:\n      return {\n        ...state,\n        [action.payload.dictionaryId]: dictionary(\n          state[action.payload.dictionaryId],\n          action,\n        ),\n      };\n    case $.RESTORE_FROM_INDEXEDDB:\n      return {\n        ...state,\n        ...mapValues(action.payload.dictionaries, d => {\n          return dictionary(\n            {\n              ...state[d.id],\n              ...d,\n            },\n            action,\n          );\n        }),\n      };\n    default:\n      return state;\n  }\n}\n\nexport default dictionaries;\n","import { combineReducers } from 'redux';\nimport { MAP_DEFINATION_TO_DICTIONARY, UNMAP_DEFINATION_TO_DICTIONARY } from '../constants';\n\nconst id = (state = '') => {\n  return state;\n}\n\nconst word = (state = '') => {\n  return state;\n}\n\nconst level = (state = '') => {\n  return state;\n}\n\nconst domain = (state = '') => {\n  return state;\n}\n\nconst text = (state = '') => {\n  return state;\n}\n\nconst translate = (state = '') => {\n  return state;\n}\n\nconst examples = (state = []) => {\n  return state;\n}\n\nconst dictionaries = (state = [], action) => {\n  switch (action.type) {\n    case MAP_DEFINATION_TO_DICTIONARY:\n      return [\n        ...state,\n        action.payload.dictionaryId,\n      ];\n    case UNMAP_DEFINATION_TO_DICTIONARY:\n      return state.filter(\n        dictionaryId => dictionaryId !== action.payload.dictionaryId\n      );\n    default:\n      return state;\n  }\n}\n\nexport default combineReducers({\n  id,\n  word,\n  level,\n  domain,\n  text,\n  translate,\n  examples,\n  dictionaries,\n});\n","import { mapValues } from 'lodash';\nimport defination from './defination';\nimport { MAP_DEFINATION_TO_DICTIONARY, UNMAP_DEFINATION_TO_DICTIONARY } from '../dictionaries/constants';\nimport { ADD_ENTITIES, RESTORE_FROM_INDEXEDDB } from '../constants';\n\nconst definations = (state = {}, action) => {\n  switch (action.type) {\n    case ADD_ENTITIES:\n      return {\n        ...state,\n        ...mapValues(action.payload.definations, d => {\n          return defination(\n            {\n              ...state[d.id],\n              ...d,\n              word: action.result,\n            },\n            action,\n          )\n        }),\n      };\n    case RESTORE_FROM_INDEXEDDB:\n      return {\n        ...state,\n        ...mapValues(action.payload.definations, d => {\n          return defination(\n            {\n              ...state[d.id],\n              ...d,\n            },\n            action,\n          )\n        }),\n      };\n    case MAP_DEFINATION_TO_DICTIONARY:\n    case UNMAP_DEFINATION_TO_DICTIONARY:\n      return {\n        ...state,\n        [action.payload.definationId]: defination(\n          state[action.payload.definationId],\n          action\n        ),\n      };\n    default:\n      return state;\n  }\n}\n\nexport default definations;\n","import { combineReducers } from 'redux';\nimport words from './words';\nimport dictionaries from './dictionaries';\nimport definations from './definations';\n\nexport default combineReducers({\n  words,\n  dictionaries,\n  definations,\n})\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\n\nexport default function Words({ children }) {\n  return (\n    <div>\n      { children }\n    </div>\n  );\n}\n","const apiDomain = process.env.NODE_ENV === 'development'\n  ? 'http://localhost:9527'\n  : 'https://river.qas612820704.now.sh';\n\nexport async function fetchAutoCompleteJson(word) {\n  const response = await fetch(`${apiDomain}/cambridge/english-chinese-traditional/auto-complete/${word}`)\n\n  return response.json();\n}\n\nexport async function fetchWord(word) {\n  const response = await fetch(`${apiDomain}/cambridge/english-chinese-traditional/${word}`);\n\n  return response.json();\n}\n\n","import * as $ from './constants';\n\nexport function addDictionary(rawDictionary) {\n  return (dispatch, getState, { db }) => {\n    const dictionaryId = rawDictionary.name;\n\n    dispatch({\n      type: $.ADD_DICTIONARY,\n      payload: {\n        id: dictionaryId,\n        ...rawDictionary,\n      },\n    });\n\n    const dictionary = getState().dictionaries[dictionaryId];\n\n    db.dictionaries.set(dictionaryId, dictionary);\n  }\n}\nexport function delDictionary(dictionaryId) {\n  return (dispatch, _, { db }) => {\n    dispatch({\n      type: $.DEL_DICTIONARY,\n      payload: {\n        dictionaryId,\n      },\n    });\n\n    db.dictionaries.delete(dictionaryId);\n  };\n}\nexport function mapDefinationToDictionary(definationId, dictionaryId='default') {\n  return (dispatch, getState, { db }) => {\n\n    dispatch({\n      type: $.MAP_DEFINATION_TO_DICTIONARY,\n      payload: {\n        dictionaryId,\n        definationId,\n      }\n    })\n\n    const dictionary = getState().dictionaries[dictionaryId];\n    const defination = getState().definations[definationId];\n    // TODO: this is async\n    db.dictionaries.set(dictionaryId, dictionary);\n    db.definations.set(definationId, defination);\n\n  }\n}\nexport function unmapDefinationToDictionary(definationId, dictionaryId='default') {\n  return (dispatch, getState, { db }) => {\n    dispatch({\n      type: $.UNMAP_DEFINATION_TO_DICTIONARY,\n      payload: {\n        dictionaryId,\n        definationId,\n      }\n    });\n\n    const dictionary = getState().dictionaries[dictionaryId];\n    db.dictionaries.set(dictionaryId, dictionary);\n    db.definations.delete(definationId);\n  };\n}\n\nexport function toggleMappingDefinationToDictionary(definationId, dictionaryId) {\n  return (dispatch, getState) => {\n    const defination = getState().definations[definationId];\n\n    return defination.dictionaries.includes(dictionaryId)\n      ? dispatch(unmapDefinationToDictionary(definationId, dictionaryId))\n      : dispatch(mapDefinationToDictionary(definationId, dictionaryId));\n  };\n}\n","import { mapKeys } from 'lodash';\nimport { ADD_ENTITIES, RESTORE_FROM_INDEXEDDB } from './constants';\nexport * from './words/actions';\nexport * from './dictionaries/actions';\n\nexport function addEntities(entities, result) {\n  return {\n    type: ADD_ENTITIES,\n    payload: entities,\n    result,\n  };\n}\n\nexport function restoreFromIndexedDB() {\n  return async (dispatch, getState, { db }) => {\n    const dictionaryPromises = db.dictionaries\n      .keys()\n      .then(dictionaryIds => dictionaryIds.map(id => db.dictionaries.get(id)))\n      .then(promises => Promise.all(promises));\n    const definationPromises = db.definations\n      .keys()\n      .then(definationIds => definationIds.map(id => db.definations.get(id)))\n      .then(promises => Promise.all(promises));\n\n    const [ dictionaries, definations ] = await Promise.all([ dictionaryPromises, definationPromises ]);\n\n    return dispatch({\n      type: RESTORE_FROM_INDEXEDDB,\n      payload: {\n        dictionaries: mapKeys(dictionaries, d => d.id),\n        definations: mapKeys(definations, d => d.id),\n      },\n    });\n  };\n}\n","import { useEffect, useCallback } from 'react';\nimport { useMappedState, useDispatch } from 'redux-react-hook';\nimport { map } from 'lodash';\nimport { getWord, increaseWordSearchCount } from './actions';\n\nexport function useWord(wordId) {\n  const word = useMappedState(\n    useCallback(\n      state => state.words[wordId],\n      [wordId],\n    ),\n  );\n  const dispatch = useDispatch();\n\n  useEffect(\n    () => { increaseWordSearchCount(wordId) },\n    [wordId],\n  );\n\n  if (!word) {\n    dispatch(getWord(wordId));\n  }\n\n  return {\n    word,\n  }\n}\n\nexport function useDefination(definationId) {\n  const defination = useMappedState(\n    useCallback(\n      state => {\n        const defination = state.definations[definationId];\n\n        return defination;\n      },\n      [definationId],\n    ),\n  );\n\n  return {\n    defination,\n  }\n}\n\nexport function useDictionaries() {\n  const dictionaries = useMappedState(\n    useCallback(\n      state => state.dictionaries,\n      [],\n    ),\n  );\n\n  return {\n    dictionaries: map(dictionaries),\n  };\n}\n\nexport function useDictionary(dictionaryId) {\n  const dictionary = useMappedState(\n    useCallback(\n      state => state.dictionaries[dictionaryId],\n      [dictionaryId],\n    ),\n  );\n\n  return {\n    dictionary,\n  };\n}\n","import { normalize } from 'normalizr';\nimport * as $ from './constants';\nimport { addEntities } from '../actions';\nimport { fetchWord } from '../../api/cambridge';\n\nexport function getWord(id) {\n  return async (dispatch, getState, { schema }) => {\n    let isCached = getState().words[id];\n\n    if (!isCached) {\n      dispatch({\n        type: $.REQUEST_FETCHING_WORD,\n        payload: { id },\n      });\n\n      try {\n        const result = await fetchWord(id);\n\n        const data = normalize(result, schema.word);\n\n        dispatch(addEntities(data.entities, data.result));\n\n        dispatch({\n          type: $.SUCCESS_FETCHING_WORD,\n          payload: { id },\n        });\n      } catch (e) {\n        console.error(e);\n        dispatch({\n          type: $.REJECT_FETCHING_WORD,\n          payload: { id },\n        });\n      }\n    }\n\n    return getState().words[id];\n  }\n}\n\nexport function increaseWordSearchCount(id) {\n  return {\n    type: $.INCRESDE_WORD_SEARCH_COUNT,\n    payload: { id },\n  };\n}\n","import React, { useState, useCallback, useEffect, useMemo } from 'react';\nimport { map } from 'lodash';\nimport { Avatar, Badge, Spin, Tabs, Icon, List, Typography, Skeleton, Menu, Checkbox, Dropdown } from 'antd';\nimport {\n  useWord, useDefination\n} from '../../redux/hooks';\nimport { useMappedState, useDispatch } from 'redux-react-hook';\nimport { toggleMappingDefinationToDictionary as reduxToggleMappingDefinationToDictionary } from '../../redux/actions';\n\nconst { Title, Paragraph } = Typography;\nconst { TabPane } = Tabs;\n\nexport default function Word({ wordId }) {\n  const { word } = useWord(wordId);\n\n  if (!word) {\n    return  (\n      <Spin>\n        <Skeleton />\n      </Spin>\n    );\n  }\n\n  return (\n    <section style={{ margin: '16px 0' }}>\n      <Spin spinning={word.isFetching}>\n        <Title>{wordId}</Title>\n        <Tabs>\n        { word.explanations.map(explaination => (\n          <TabPane\n            tab={\n              <span>\n                <Avatar style={{ background: '#008dff', marginRight: 8 }}>{explaination.pos}</Avatar>\n                {explaination.pos}\n              </span>\n            }\n            key={explaination.pos}\n          >\n          { renderExplaination(explaination) }\n          </TabPane>\n        ))}\n        </Tabs>\n      </Spin>\n    </section>\n  );\n}\n\nfunction renderExplaination(explaination) {\n  return (\n    <div>\n      <Paragraph style={{ marginBottom: 16 }}>\n        <Icon type=\"notification\" style={{marginRight: 16}} />\n        <IpaAction region=\"US\" {...explaination.ipaUS} />\n        <IpaAction region=\"UK\" {...explaination.ipaUK} />\n      </Paragraph>\n      <List\n        itemLayout=\"vertical\"\n        dataSource={explaination.senses}\n        renderItem={renderSense}\n      />\n    </div>\n  )\n}\n\nfunction renderSense(sense) {\n  return (\n    <List.Item>\n      { sense.guideWord &&\n        <Title level={4}>\n          <Icon type=\"radar-chart\" style={{ marginRight: 8 }} />\n          {sense.guideWord}\n        </Title>\n      }\n      <List bordered\n        itemLayout=\"vertical\"\n        dataSource={sense.definations}\n        renderItem={definationId => <Defination definationId={definationId}/>}\n      />\n    </List.Item>\n  )\n}\n\nexport function Defination({ definationId }) {\n  const { defination } = useDefination(definationId);\n\n  const [dropdownVisibility, setDropdownVisibility] = useState(false);\n\n  const dictionaries = useMappedState(\n    state => map(state.dictionaries),\n    [],\n  );\n\n  const dispatch = useDispatch();\n  const toggleMappingDefinationToDictionary = useCallback(\n    (definationId, dictionaryId) => dispatch(reduxToggleMappingDefinationToDictionary(definationId, dictionaryId)),\n    [],\n  );\n\n  const menu = (\n    <Menu onMouseLeave={() => setDropdownVisibility(false)}>\n    { dictionaries.map(d => (\n      <Menu.Item key={d.id}>\n        <Checkbox\n          checked={d.definations.includes(definationId)}\n          onChange={() => toggleMappingDefinationToDictionary(definationId, d.id)}\n        >\n        {d.name}\n        </Checkbox>\n      </Menu.Item>\n    ))}\n    </Menu>\n  )\n\n  return (\n    <List.Item style={{ flexDirection: 'column' }}>\n      <List.Item.Meta\n        title={\n          <span>\n            <Badge\n              style={{ marginRight: 8, background: '#52c41a' }}\n              count={defination.level}\n            />\n            { defination.text }\n          </span>\n        }\n        description={\n          <span>\n            <Dropdown\n              overlay={menu}\n              visible={dropdownVisibility}\n              onMouseEnter={() => setDropdownVisibility(true)}\n            >\n              <Icon\n                type=\"plus\"\n                style={{ marginRight: 8, cursor: 'pointer' }}\n              />\n            </Dropdown>\n            <span style={{ color: '#1890ff' }}>{defination.translate}</span>\n          </span>\n        }\n      />\n      <List\n        itemLayout=\"vertical\"\n        dataSource={defination.examples}\n        renderItem={renderExample}\n      />\n    </List.Item>\n  )\n}\n\nfunction renderExample(example) {\n  return (\n    <List.Item>\n      <Paragraph>{example.text}</Paragraph>\n      <Paragraph style={{ color: '#40a9ff' }}>{example.translate}</Paragraph>\n    </List.Item>\n  )\n}\n\nfunction IpaAction({ region, html, audioUrl }) {\n  const [ isPlaying, setPlaying ] = useState(false);\n\n  const audio = useMemo(() => new Audio(audioUrl), [audioUrl]);\n\n  useEffect(() => {\n    audio.addEventListener('ended', () => {\n      setPlaying(false);\n    });\n  }, [audio]);\n\n\n  const handleTextClick = useCallback(\n    () => {\n      setPlaying(true);\n      audio.play();\n    },\n    [audio],\n  );\n\n  return (\n    <span\n      style={{ marginRight: 16, cursor: 'pointer' }}\n      onClick={handleTextClick}\n    >\n      <Avatar style={{marginRight: 8, background: isPlaying ? '#fa8c16' : '' }}>{region}</Avatar>\n      /<span dangerouslySetInnerHTML={{ __html: html }}/>/\n    </span>\n  )\n}\n","import React, { useCallback } from 'react';\nimport { useMappedState } from 'redux-react-hook';\nimport { Link } from '@reach/router';\nimport { List, Card, Badge, Spin } from 'antd';\n\nexport default function Dictionary({ dictionaryId }) {\n  const dictionary = useMappedState(\n    useCallback(\n      state => {\n        const dictionary = state.dictionaries[dictionaryId];\n\n        if (!dictionary) return undefined;\n\n        return {\n          ...dictionary,\n          definations: dictionary.definations.map(\n            defId => state.definations[defId],\n          )\n        }\n      },\n      [dictionaryId],\n    ),\n  );\n\n  if (!dictionary)\n      return (\n        <Spin />\n      )\n\n  return (\n    <List\n      grid={{ gutter: 16, column: 4 }}\n      dataSource={dictionary.definations}\n      renderItem={renderDefination}\n    />\n  )\n}\n\nfunction renderDefination(defination) {\n  return (\n    <List.Item>\n      <Card>\n        <Card.Meta\n          title={\n            <span>\n              <Badge\n                style={{ marginRight: 8, background: '#52c41a' }}\n                count={defination.level}\n              />\n              <Link to={`/words/${defination.word}`}>\n                {defination.word}\n              </Link>\n            </span>\n          }\n          description={defination.translate}\n        />\n      </Card>\n    </List.Item>\n  )\n}\n","import React, { useState, useCallback } from 'react';\nimport { useMappedState, useDispatch } from 'redux-react-hook';\nimport { Router, navigate } from '@reach/router';\nimport { map } from 'lodash';\nimport { Input, Icon, Card, List } from 'antd';\nimport  Dictionary from './dictionary';\nimport { addDictionary as reduxAddDictionary, delDictionary as reduxDelDictionary } from '../../redux/actions';\n\nexport default function Dictionaries() {\n  return (\n    <div>\n      <Router>\n        <DictionaryIndex path=\"/\" />\n        <Dictionary path=\":dictionaryId\" />\n      </Router>\n    </div>\n  );\n}\n\nfunction DictionaryIndex() {\n  const [newDictionaryName, setNewDictionaryName] = useState('');\n  const dispatch = useDispatch();\n  const addDictionary = useCallback(\n    () => {\n      setNewDictionaryName('');\n      dispatch(reduxAddDictionary({ name: newDictionaryName }));\n    },\n    [newDictionaryName],\n  );\n\n  const dictionaries = useMappedState(\n    state => map(state.dictionaries),\n    [],\n  );\n\n  return (\n    <div>\n      <Input\n        value={newDictionaryName}\n        onChange={e => setNewDictionaryName(e.target.value)}\n        onPressEnter={addDictionary}\n        placeholder='Add dictionary'\n        suffix={<Icon onClick={addDictionary} type='plus'/>}\n        style={{ marginBottom: '2em' }}\n      />\n      <List\n        grid={{ gutter: 16, column: 4 }}\n        dataSource={dictionaries}\n        renderItem={dictionary => <DictionaryCard dictionary={dictionary} />}\n      />\n    </div>\n  );\n}\n\nfunction DictionaryCard({ dictionary }) {\n  const dispatch = useDispatch();\n  const delDictionary = useCallback(\n    () => dispatch(reduxDelDictionary(dictionary.id)),\n    [dictionary.id],\n  );\n\n  return (\n    <List.Item\n      style={{ cursor: 'pointer' }}\n      onClick={() => navigate(`/dictionaries/${dictionary.id}`)}\n    >\n      <Card>\n        <Card.Meta\n          title={\n            <span>\n              { dictionary.id !== 'default' && (\n                <Icon\n                  type=\"minus\"\n                  style={{ marginRight: 8, color: '#f5222d' }}\n                  onClick={delDictionary}\n                />\n              )}\n              { dictionary.name }\n            </span>\n          }\n        />\n      </Card>\n    </List.Item>\n  )\n}\n","import React, { useState, useCallback } from 'react';\nimport { Router, Link, navigate } from '@reach/router';\nimport { Layout, Input, AutoComplete, Avatar, Menu, Icon } from 'antd';\nimport Words from './pages/words';\nimport Word from './pages/words/word';\nimport Dictionaries from './pages/dictionaries';\nimport { useDictionaries } from './redux/hooks';\nimport { fetchAutoCompleteJson } from './api/cambridge';\nimport './App.scss';\n\nconst { Header ,Content, Sider } = Layout;\n\nexport default function App() {\n  return (\n    <Router>\n      <Main path=\"/\">\n        <Words path=\"words\">\n          <Word path=\":wordId\"/>\n        </Words>\n        <Dictionaries path=\"dictionaries/*\" />\n      </Main>\n    </Router>\n  );\n};\n\nfunction Main({ children }) {\n  const { dictionaries } = useDictionaries();\n\n  const [ suggestions, handleSuggestion ] = useSuggestion();\n\n  const handleSearch = useCallback(\n    word => navigate(`/words/${word}`),\n    [],\n  );\n\n  return (\n    <Layout>\n      <Sider className=\"sider\" collapsible collapsedWidth=\"0\">\n        <div className=\"sider__brand\">\n          <Avatar className=\"sider__brand__avatar\">R</Avatar>\n        </div>\n        <Menu\n          theme=\"dark\"\n          mode=\"inline\"\n          defaultOpenKeys={['dictionaries']}\n        >\n          <Menu.SubMenu\n            key='dictionaries'\n            title={<span><Icon type=\"book\" /><span>Dictionaries</span></span>}\n          >\n          { dictionaries.map(dictionary => (\n            <Menu.Item key={dictionary.id}>\n              <Link to={`/dictionaries/${dictionary.id}`}>{ dictionary.name }</Link>\n            </Menu.Item>\n          ))}\n            <Menu.Item key='new-dictionary'>\n              <Link to='/dictionaries'><Icon type=\"plus\" /><span>New Dictionary</span></Link>\n            </Menu.Item>\n          </Menu.SubMenu>\n        </Menu>\n      </Sider>\n      <Layout className='main'>\n        <Header className=\"header\">\n          <AutoComplete\n            className='header__search-bar'\n            dataSource={suggestions}\n            onSelect={handleSearch}\n            onSearch={handleSuggestion}\n          >\n            <Input.Search\n              placeholder=\"translate...\"\n              onSearch={handleSearch}\n            />\n          </AutoComplete>\n        </Header>\n        <Content className='content__container'>\n          <div className='content'>\n            { children }\n          </div>\n        </Content>\n      </Layout>\n    </Layout>\n  );\n}\n\nfunction useSuggestion() {\n  const [ suggestions, setSuggestion ] = useState([]);\n\n  const handleSuggestion = useCallback(\n    async (value) => {\n      if (value === '') return;\n      const { results: suggestions } = await fetchAutoCompleteJson(value);\n      setSuggestion(suggestions.map(s => s.searchtext));\n    },\n    [],\n  );\n\n  return [ suggestions, handleSuggestion ];\n}\n","import { mapKeys } from 'lodash';\nimport { openDB } from 'idb';\nimport { name } from '../../package.json';\n\nfunction createStores(storeNames = []) {\n  const dbPromise = openDB(name, 1, {\n    upgrade(db) {\n      for (let name of storeNames) {\n        db.createObjectStore(name);\n      }\n    }\n  });\n\n  const stores = storeNames.map(name => {\n    const api = {\n      async get(key) {\n        return (await dbPromise).get(name, key);\n      },\n      async getAll() {\n        return (await dbPromise).getAll(name);\n      },\n      async set(key, val) {\n        return (await dbPromise).put(name, val, key);\n      },\n      async delete(key) {\n        return (await dbPromise).delete(name, key);\n      },\n      async clear() {\n        return (await dbPromise).clear(name);\n      },\n      async keys() {\n        return (await dbPromise).getAllKeys(name);\n      },\n    }\n\n    return api;\n  })\n\n  return mapKeys(stores, (_, i) => storeNames[i]);\n}\n\nexport const { definations, dictionaries } = createStores(['definations', 'dictionaries']);\n","import { schema } from 'normalizr';\n\nexport const defination = new schema.Entity('definations');\n\nexport const word = new schema.Entity('words', {\n    explanations: [{ senses: [{ definations: [defination] }] }],\n  },\n);\n\ndefination.define({ word });\n","import React from 'react';\nimport { render } from 'react-dom';\nimport { createStore, compose, applyMiddleware } from 'redux';\nimport { StoreContext } from 'redux-react-hook';\nimport thunk from 'redux-thunk';\nimport reducer from './redux/reducer';\nimport * as serviceWorker from './serviceWorker';\nimport App from './App';\nimport { restoreFromIndexedDB } from './redux/actions';\nimport * as db from './db';\nimport * as schema from './api/schema';\nimport './index.css';\n\n\nconst devtool = (process.env.NODE_ENV === 'development' && typeof window === 'object')\n  && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__\n    ? window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__({\n      // Specify extension’s options like name, actionsBlacklist, actionsCreators, serialize...\n    })\n    : compose;\n\n\nconst store = createStore(reducer, devtool(\n  applyMiddleware(thunk.withExtraArgument({ db, schema }))\n));\n\nstore.dispatch(restoreFromIndexedDB());\n\nrender(\n  <StoreContext.Provider value={store}>\n    <App />\n  </StoreContext.Provider>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}